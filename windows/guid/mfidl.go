package guid

import (
	"bytes"
	"fmt"

	"gopkg.in/yaml.v3"
)

// https://learn.microsoft.com/en-us/windows/win32/api/guiddef/ns-guiddef-guid
type GUID struct {
	Data1 uint32
	Data2 uint16
	Data3 uint16
	Data4 [8]uint8
}

func (g *GUID) String() string {
	// 转换为类似于 44ae0fa8-ea31-4109-8d2e-4cae4997c555 的格式
	str := fmt.Sprintf("%08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x", g.Data1, g.Data2, g.Data3, g.Data4[0], g.Data4[1], g.Data4[2], g.Data4[3], g.Data4[4], g.Data4[5], g.Data4[6], g.Data4[7])
	return str
}
func (g *GUID) SetString(str string) error {
	// 解析类似于 44ae0fa8-ea31-4109-8d2e-4cae4997c555 的格式
	_, err := fmt.Sscanf(str, "%08x-%04x-%04x-%02x%02x-%02x%02x%02x%02x%02x%02x",
		&g.Data1, &g.Data2, &g.Data3,
		&g.Data4[0], &g.Data4[1], &g.Data4[2], &g.Data4[3],
		&g.Data4[4], &g.Data4[5], &g.Data4[6], &g.Data4[7])
	if err != nil {
		return fmt.Errorf("failed to parse GUID string: %v", err)
	}
	return nil
}

func (g *GUID) MarshalJSON() ([]byte, error) {
	return []byte(g.String()), nil
}

func (g *GUID) UnmarshalJSON(b []byte) error {
	return g.SetString(string(b))
}

func (g *GUID) MarshalYAML() (interface{}, error) {
	return g.String(), nil
}

func (g *GUID) UnmarshalYAML(value *yaml.Node) error {
	return g.SetString(value.Value)
}

func (g *GUID) IsMatch(need *GUID) bool {
	if need.Data1 != g.Data1 || need.Data2 != g.Data2 || need.Data3 != g.Data3 || !bytes.Equal(need.Data4[:], g.Data4[:]) {
		return false
	}
	return true
}

//EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE, 0xc60ac5fe, 0x252a, 0x478f, 0xa0, 0xef, 0xbc, 0x8f, 0xa5, 0xf7, 0xca, 0xd3);
//EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_HW_SOURCE, 0xde7046ba, 0x54d6, 0x4487, 0xa2, 0xa4, 0xec, 0x7c, 0xd, 0x1b, 0xd1, 0x63);
//EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_FRIENDLY_NAME, 0x60d0e559, 0x52f8, 0x4fa2, 0xbb, 0xce, 0xac, 0xdb, 0x34, 0xa8, 0xec, 0x1);
//EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_MEDIA_TYPE, 0x56a819ca, 0xc78, 0x4de4, 0xa0, 0xa7, 0x3d, 0xda, 0xba, 0xf, 0x24, 0xd4);
//EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_CATEGORY, 0x77f0ae69, 0xc3bd, 0x4509, 0x94, 0x1d, 0x46, 0x7e, 0x4d, 0x24, 0x89, 0x9e);
//EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_SYMBOLIC_LINK, 0x58f0aad8, 0x22bf, 0x4f8a, 0xbb, 0x3d, 0xd2, 0xc4, 0x97, 0x8c, 0x6e, 0x2f);
//EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_SYMBOLIC_LINK, 0x98d24b5e, 0x5930, 0x4614, 0xb5, 0xa1, 0xf6, 0x0, 0xf9, 0x35, 0x5a, 0x78);
//EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_MAX_BUFFERS, 0x7dd9b730, 0x4f2d, 0x41d5, 0x8f, 0x95, 0xc, 0xc9, 0xa9, 0x12, 0xba, 0x26);
//EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_ENDPOINT_ID, 0x30da9258, 0xfeb9, 0x47a7, 0xa4, 0x53, 0x76, 0x3a, 0x7a, 0x8e, 0x1c, 0x5f);
//EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_ROLE, 0xbc9d118e, 0x8c67, 0x4a18, 0x85, 0xd4, 0x12, 0xd3, 0x0, 0x40, 0x5, 0x52);
//EXTERN_GUID( MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_PROVIDER_DEVICE_ID, 0x36689d42, 0xa06c, 0x40ae, 0x84, 0xcf, 0xf5, 0xa0, 0x34, 0x6, 0x7c, 0xc4);
//EXTERN_GUID(MF_DEVSOURCE_ATTRIBUTE_SOURCE_XADDRESS, 0xbca0be52, 0xc327, 0x44c7, 0x9b, 0x7d, 0x7f, 0xa8, 0xd9, 0xb5, 0xbc, 0xda);
//EXTERN_GUID(MF_DEVSOURCE_ATTRIBUTE_SOURCE_STREAM_URL, 0x9d7b40d2, 0x3617, 0x4043, 0x93, 0xe3, 0x8d, 0x6d, 0xa9, 0xbb, 0x34, 0x92);
//EXTERN_GUID(MF_DEVSOURCE_ATTRIBUTE_SOURCE_USERNAME,0x5d01add, 0x949f, 0x46eb, 0xbc, 0x8e, 0x8b, 0xd, 0x2b, 0x32, 0xd7, 0x9d);
//EXTERN_GUID(MF_DEVSOURCE_ATTRIBUTE_SOURCE_PASSWORD, 0xa0fd7e16, 0x42d9, 0x49df, 0x84, 0xc0, 0xe8, 0x2c, 0x5e, 0xab, 0x88, 0x74);
//EXTERN_GUID(CLSID_FrameServerNetworkCameraSource, 0x7a213aa7, 0x866f, 0x414a, 0x8c, 0x1a, 0x27, 0x5c, 0x72, 0x83, 0xa3, 0x95);
//EXTERN_GUID(MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_GUID, 0x14dd9a1c, 0x7cff, 0x41be, 0xb1, 0xb9, 0xba, 0x1a, 0xc6, 0xec, 0xb5, 0x71);
//EXTERN_GUID(MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_GUID, 0x8ac3587a, 0x4ae7, 0x42d8, 0x99, 0xe0, 0x0a, 0x60, 0x13, 0xee, 0xf9, 0x0f);
//EXTERN_GUID( MF_DEVICESTREAM_IMAGE_STREAM, 0xa7ffb865, 0xe7b2, 0x43b0, 0x9f, 0x6f, 0x9a, 0xf2, 0xa0, 0xe5, 0xf, 0xc0);
//EXTERN_GUID( MF_DEVICESTREAM_INDEPENDENT_IMAGE_STREAM, 0x3eeec7e, 0xd605, 0x4576, 0x8b, 0x29, 0x65, 0x80, 0xb4, 0x90, 0xd7, 0xd3);
//EXTERN_GUID( MF_DEVICESTREAM_STREAM_ID, 0x11bd5120, 0xd124, 0x446b, 0x88, 0xe6, 0x17, 0x6, 0x2, 0x57, 0xff, 0xf9);
//EXTERN_GUID( MF_DEVICESTREAM_STREAM_CATEGORY, 0x2939e7b8, 0xa62e, 0x4579, 0xb6, 0x74, 0xd4, 0x7, 0x3d, 0xfa, 0xbb, 0xba);
//EXTERN_GUID( MF_DEVICESTREAM_FRAMESERVER_SHARED, 0x1CB378E9, 0xB279, 0x41D4, 0xAF, 0x97, 0x34, 0xA2, 0x43, 0xE6, 0x83, 0x20);
//EXTERN_GUID( MF_DEVICESTREAM_TRANSFORM_STREAM_ID,  0xe63937b7, 0xdaaf, 0x4d49, 0x81, 0x5f, 0xd8, 0x26, 0xf8, 0xad, 0x31, 0xe7);
//EXTERN_GUID( MF_DEVICESTREAM_EXTENSION_PLUGIN_CLSID, 0x048e6558, 0x60c4, 0x4173, 0xbd, 0x5b, 0x6a, 0x3c, 0xa2, 0x89, 0x6a, 0xee);
//EXTERN_GUID( MF_DEVICEMFT_EXTENSION_PLUGIN_CLSID, 0x844dbae, 0x34fa, 0x48a0, 0xa7, 0x83, 0x8e, 0x69, 0x6f, 0xb1, 0xc9, 0xa8);
//EXTERN_GUID( MF_DEVICESTREAM_EXTENSION_PLUGIN_CONNECTION_POINT,  0x37f9375c, 0xe664, 0x4ea4, 0xaa, 0xe4, 0xcb, 0x6d, 0x1d, 0xac, 0xa1, 0xf4);
//EXTERN_GUID( MF_DEVICESTREAM_TAKEPHOTO_TRIGGER, 0x1d180e34, 0x538c, 0x4fbb, 0xa7, 0x5a, 0x85, 0x9a, 0xf7, 0xd2, 0x61, 0xa6 );
//EXTERN_GUID( MF_DEVICESTREAM_MAX_FRAME_BUFFERS, 0x1684cebe, 0x3175, 0x4985, 0x88, 0x2c, 0x0e, 0xfd, 0x3e, 0x8a, 0xc1, 0x1e );
//EXTERN_GUID( MF_DEVICEMFT_CONNECTED_FILTER_KSCONTROL, 0x6a2c4fa6, 0xd179, 0x41cd, 0x95, 0x23, 0x82, 0x23, 0x71, 0xea, 0x40, 0xe5);
//EXTERN_GUID( MF_DEVICEMFT_CONNECTED_PIN_KSCONTROL, 0xe63310f7, 0xb244, 0x4ef8, 0x9a, 0x7d, 0x24, 0xc7, 0x4e, 0x32, 0xeb, 0xd0);
//EXTERN_GUID( MF_DEVICE_THERMAL_STATE_CHANGED, 0x70ccd0af, 0xfc9f, 0x4deb, 0xa8, 0x75, 0x9f, 0xec, 0xd1, 0x6c, 0x5b, 0xd4 );
//EXTERN_GUID(MFSampleExtension_DeviceTimestamp, 0x8f3e35e7, 0x2dcd, 0x4887, 0x86, 0x22, 0x2a, 0x58, 0xba, 0xa6, 0x52, 0xb0);
//EXTERN_GUID(MFSampleExtension_Spatial_CameraViewTransform , 0x4e251fa4, 0x830f, 0x4770, 0x85, 0x9a, 0x4b, 0x8d, 0x99, 0xaa, 0x80, 0x9b);
//EXTERN_GUID(MFSampleExtension_Spatial_CameraCoordinateSystem , 0x9d13c82f, 0x2199, 0x4e67, 0x91, 0xcd, 0xd1, 0xa4, 0x18, 0x1f, 0x25, 0x34);
//EXTERN_GUID(MFSampleExtension_Spatial_CameraProjectionTransform , 0x47f9fcb5, 0x2a02, 0x4f26, 0xa4, 0x77, 0x79, 0x2f, 0xdf, 0x95, 0x88, 0x6a);

var (
	MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE                           = GUID{0xc60ac5fe, 0x252a, 0x478f, [8]uint8{0xa0, 0xef, 0xbc, 0x8f, 0xa5, 0xf7, 0xca, 0xd3}}
	MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_HW_SOURCE          = GUID{0xde7046ba, 0x54d6, 0x4487, [8]uint8{0xa2, 0xa4, 0xec, 0x7c, 0x0, 0xd1, 0xb1, 0x63}}
	MF_DEVSOURCE_ATTRIBUTE_FRIENDLY_NAME                         = GUID{0x60d0e559, 0x52f8, 0x4fa2, [8]uint8{0xbb, 0xce, 0xac, 0xdb, 0x34, 0xa8, 0xec, 0x1}}
	MF_DEVSOURCE_ATTRIBUTE_MEDIA_TYPE                            = GUID{0x56a819ca, 0xc78, 0x4de4, [8]uint8{0xa0, 0xa7, 0x3d, 0xda, 0xba, 0xf, 0x24, 0xd4}}
	MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_CATEGORY           = GUID{0x77f0ae69, 0xc3bd, 0x4509, [8]uint8{0x94, 0x1d, 0x46, 0x7e, 0x4d, 0x24, 0x89, 0x9e}}
	MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_SYMBOLIC_LINK      = GUID{0x58f0aad8, 0x22bf, 0x4f8a, [8]uint8{0xbb, 0x3d, 0xd2, 0xc4, 0x97, 0x8c, 0x6e, 0x2f}}
	MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_SYMBOLIC_LINK      = GUID{0x98d24b5e, 0x5930, 0x4614, [8]uint8{0xb5, 0xa1, 0xf6, 0x0, 0xf9, 0x35, 0x5a, 0x78}}
	MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_MAX_BUFFERS        = GUID{0x7dd9b730, 0x4f2d, 0x41d5, [8]uint8{0x8f, 0x95, 0xc, 0xc9, 0xa9, 0x12, 0xba, 0x26}}
	MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_ENDPOINT_ID        = GUID{0x30da9258, 0xfeb9, 0x47a7, [8]uint8{0xa4, 0x53, 0x76, 0x3a, 0x7a, 0x8e, 0x1c, 0x5f}}
	MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_ROLE               = GUID{0xbc9d118e, 0x8c67, 0x4a18, [8]uint8{0x85, 0xd4, 0x12, 0xd3, 0x0, 0x40, 0x5, 0x52}}
	MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_PROVIDER_DEVICE_ID = GUID{0x36689d42, 0xa06c, 0x40ae, [8]uint8{0x84, 0xcf, 0xf5, 0xa0, 0x34, 0x6, 0x7c, 0xc4}}
	MF_DEVSOURCE_ATTRIBUTE_SOURCE_XADDRESS                       = GUID{0xbca0be52, 0xc327, 0x44c7, [8]uint8{0x9b, 0x7d, 0x7f, 0xa8, 0xd9, 0xb5, 0xbc, 0xda}}
	MF_DEVSOURCE_ATTRIBUTE_SOURCE_STREAM_URL                     = GUID{0x9d7b40d2, 0x3617, 0x4043, [8]uint8{0x93, 0xe3, 0x8d, 0x6d, 0xa9, 0xbb, 0x34, 0x92}}
	MF_DEVSOURCE_ATTRIBUTE_SOURCE_USERNAME                       = GUID{0x5d01add, 0x949f, 0x46eb, [8]uint8{0xbc, 0x8e, 0x8b, 0xd, 0x2b, 0x32, 0xd7, 0x9d}}
	MF_DEVSOURCE_ATTRIBUTE_SOURCE_PASSWORD                       = GUID{0xa0fd7e16, 0x42d9, 0x49df, [8]uint8{0x84, 0xc0, 0xe8, 0x2c, 0x5e, 0xab, 0x88, 0x74}}
	CLSID_FrameServerNetworkCameraSource                         = GUID{0x7a213aa7, 0x866f, 0x414a, [8]uint8{0x8c, 0x1a, 0x27, 0x5c, 0x72, 0x83, 0xa3, 0x95}}
	MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_AUDCAP_GUID               = GUID{0x14dd9a1c, 0x7cff, 0x41be, [8]uint8{0xb1, 0xb9, 0xba, 0x1a, 0xc6, 0xec, 0xb5, 0x71}}
	MF_DEVSOURCE_ATTRIBUTE_SOURCE_TYPE_VIDCAP_GUID               = GUID{0x8ac3587a, 0x4ae7, 0x42d8, [8]uint8{0x99, 0xe0, 0x0a, 0x60, 0x13, 0xee, 0xf9, 0x0f}}
	MF_DEVICESTREAM_IMAGE_STREAM                                 = GUID{0xa7ffb865, 0xe7b2, 0x43b0, [8]uint8{0x9f, 0x6f, 0x9a, 0xf2, 0xa0, 0xe5, 0xf, 0xc0}}
	MF_DEVICESTREAM_INDEPENDENT_IMAGE_STREAM                     = GUID{0x3eeec7e, 0xd605, 0x4576, [8]uint8{0x8b, 0x29, 0x65, 0x80, 0xb4, 0x90, 0xd7, 0xd3}}
	MF_DEVICESTREAM_STREAM_ID                                    = GUID{0x11bd5120, 0xd124, 0x446b, [8]uint8{0x88, 0xe6, 0x17, 0x6, 0x2, 0x57, 0xff, 0xf9}}
	MF_DEVICESTREAM_STREAM_CATEGORY                              = GUID{0x2939e7b8, 0xa62e, 0x4579, [8]uint8{0xb6, 0x74, 0xd4, 0x7, 0x3d, 0xfa, 0xbb, 0xba}}
	MF_DEVICESTREAM_FRAMESERVER_SHARED                           = GUID{0x1CB378E9, 0xB279, 0x41D4, [8]uint8{0xAF, 0x97, 0x34, 0xA2, 0x43, 0xE6, 0x83, 0x20}}
	MF_DEVICESTREAM_TRANSFORM_STREAM_ID                          = GUID{0xe63937b7, 0xdaaf, 0x4d49, [8]uint8{0x81, 0x5f, 0xd8, 0x26, 0xf8, 0xad, 0x31, 0xe7}}
	MF_DEVICESTREAM_EXTENSION_PLUGIN_CLSID                       = GUID{0x048e6558, 0x60c4, 0x4173, [8]uint8{0xbd, 0x5b, 0x6a, 0x3c, 0xa2, 0x89, 0x6a, 0xee}}
	MF_DEVICEMFT_EXTENSION_PLUGIN_CLSID                          = GUID{0x844dbae, 0x34fa, 0x48a0, [8]uint8{0xa7, 0x83, 0x8e, 0x69, 0x6f, 0xb1, 0xc9, 0xa8}}
	MF_DEVICESTREAM_EXTENSION_PLUGIN_CONNECTION_POINT            = GUID{0x37f9375c, 0xe664, 0x4ea4, [8]uint8{0xaa, 0xe4, 0xcb, 0x6d, 0x1d, 0xac, 0xa1, 0xf4}}
	MF_DEVICESTREAM_TAKEPHOTO_TRIGGER                            = GUID{0x1d180e34, 0x538c, 0x4fbb, [8]uint8{0xa7, 0x5a, 0x85, 0x9a, 0xf7, 0xd2, 0x61, 0xa6}}
	MF_DEVICESTREAM_MAX_FRAME_BUFFERS                            = GUID{0x1684cebe, 0x3175, 0x4985, [8]uint8{0x88, 0x2c, 0x0e, 0xfd, 0x3e, 0x8a, 0xc1, 0x1e}}
	MF_DEVICEMFT_CONNECTED_FILTER_KSCONTROL                      = GUID{0x6a2c4fa6, 0xd179, 0x41cd, [8]uint8{0x95, 0x23, 0x82, 0x23, 0x71, 0xea, 0x40, 0xe5}}
	MF_DEVICEMFT_CONNECTED_PIN_KSCONTROL                         = GUID{0xe63310f7, 0xb244, 0x4ef8, [8]uint8{0x9a, 0x7d, 0x24, 0xc7, 0x4e, 0x32, 0xeb, 0xd0}}
	MF_DEVICE_THERMAL_STATE_CHANGED                              = GUID{0x70ccd0af, 0xfc9f, 0x4deb, [8]uint8{0xa8, 0x75, 0x9f, 0xec, 0xd1, 0x6c, 0x5b, 0xd4}}
	MFSampleExtension_DeviceTimestamp                            = GUID{0x8f3e35e7, 0x2dcd, 0x4887, [8]uint8{0x86, 0x22, 0x2a, 0x58, 0xba, 0xa6, 0x52, 0xb0}}
	MFSampleExtension_Spatial_CameraViewTransform                = GUID{0x4e251fa4, 0x830f, 0x4770, [8]uint8{0x85, 0x9a, 0x4b, 0x8d, 0x99, 0xaa, 0x80, 0x9b}}
	MFSampleExtension_Spatial_CameraCoordinateSystem             = GUID{0x9d13c82f, 0x2199, 0x4e67, [8]uint8{0x91, 0xcd, 0xd1, 0xa4, 0x18, 0x1f, 0x25, 0x34}}
	MFSampleExtension_Spatial_CameraProjectionTransform          = GUID{0x47f9fcb5, 0x2a02, 0x4f26, [8]uint8{0xa4, 0x77, 0x79, 0x2f, 0xdf, 0x95, 0x88, 0x6a}}
	MF_MEDIASOURCE_SERVICE                                       = GUID{0x279a808d, 0xaec7, 0x40c8, [8]uint8{0x9c, 0x6b, 0xa6, 0xb4, 0x92, 0xc7, 0x8a, 0x66}}
	IID_IMFActivate                                              = GUID{0x7FEE9E9A, 0x4A89, 0x47A6, [8]uint8{0x89, 0x9c, 0xb6, 0xa5, 0x3a, 0x70, 0xfb, 0x67}}
)
